@inherits LayoutComponentBase
@inject IAppState AppState
@inject NavigationManager NavigationManager
@implements IDisposable

<MudLayout>
    <MudProgressLinear Color="Color.Secondary" Indeterminate="AppState.IsAppLoading()" />
    <MudAppBar Class="mt-1" Elevation="1" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.False" OnClick="@ToggleDrawer" />
        <h5 class="mud-typography mud-typography-h6 mud-inherit-text mudblazor-appbar-brand-text d-none d-md-flex">
            Standard Framework
        </h5>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/jjeffrin/StandardFramework" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="@open" Elevation="1">
        <MudPaper Width="250px" Class="py-3" Square="true">
            <MudNavMenu>
                <MudText Typo="Typo.h6" Class="px-4">Standard Framework</MudText>
                <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Alpha 0.1</MudText>
                <MudDivider Class="my-2" />
                <MudNavLink Href="/login" Disabled="true">Login</MudNavLink>
                <MudNavLink Href="/dashboard">Dashboard</MudNavLink>
                <MudNavLink Href="/metrics">Metrics</MudNavLink>
                <MudNavGroup Title="Feature Flags" Expanded="false">
                    <MudNavLink @onclick="@(e => NavigateToPage("/featureFlags/UserConfiguration"))">User Configuration</MudNavLink>
                    <MudNavLink Href="/featureFlags/GlobalConfiguration">Global Configuration</MudNavLink>
                </MudNavGroup>
                <MudNavLink Href="/about">About</MudNavLink>
            </MudNavMenu>
        </MudPaper>
    </MudDrawer>
    <MudMainContent Class="pt-16 px-16">
        <MudContainer Class="mt-2">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    bool open = false;

    void ToggleDrawer()
    {
        open = !open;
    }

    protected override void OnInitialized()
    {
        AppState.OnAppStateChange += StateHasChanged;
    }

    protected void NavigateToPage(string link)
    {
        this.AppState.ToggleAppLoadState(true);
        this.NavigationManager.NavigateTo(link);
    }

    public void Dispose()
    {
        AppState.OnAppStateChange -= StateHasChanged;
    }

}
